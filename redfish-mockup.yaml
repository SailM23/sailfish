main:
    server_name: "mockup"

listen:
    - https::8443

session:
    timeout: 600

views:
  "rootview":
      "Logger": ["module", "root"]
      "View":
        - "fn": "with_URI"
          "params": "'/redfish/v1'"

  "testview":
      "Logger": ["module", "testview"]
      "Models":
        "default":  {"unique_name": "TEST_Unique_Name", "name": "TEST_Name", "description": "TEST_Description" }
      "Controllers":
        - "fn": "AwesomeMapper"
          "params": {"modelname": "default", "cfgsection": "testview" }
        - "fn": "ARMapper"
          "params": {"modelname": "default", "cfgsection": "testview", "mappinguniquename": "'/redfish/v1/testservice'", "AddToView": true}
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/testview'"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"

  "testview_sub":
      "Logger": ["module", "sub_testview"]
      "Models":
        "default":  {"property1": "value1"}
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/testview#' + unique"

  "sessionview":
      "Logger": ["module", "session"]
      "Models":
        "default":  {"session_timeout": 30}
      "Controllers":
        - "fn": "AwesomeMapper"
          "params": {"modelname": "default", "cfgsection": "sessionview" }
        - "fn": "ARMapper"
          "params": {"modelname": "default", "cfgsection": "SessionService", "mappinguniquename": "'/redfish/v1/SessionService'", "AddToView": true}
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/SessionService'"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"

  "registries":
      "Logger": ["module", "registry"]
      "Models":
        "default":  {}
      "Controllers":
        # not yet implemented...
        - "fn": "StaticMapper"
          "params": {"modelname": "default", "AddToView": true}
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Registries'"

  "chassis":
      "Logger": ["module", "Chassis"]
      "Models":
        "default":  {}
      "Controllers":
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "collection", "uniquename": "'collection_' + collection_uri" }
      "View":
        - "fn": "with_URI"
          "params": "collection_uri "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
      "Aggregate": "chassis"

  "systems":
      "Logger": ["module", "Systems"]
      "Models":
        "default":  {}
      "Controllers":
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "collection", "uniquename": "'collection_' + collection_uri" }
      "View":
        - "fn": "with_URI"
          "params": "collection_uri "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
      "Aggregate": "systems"

  "managers":
      "Logger": ["module", "Managers"]
      "Models":
        "default":  {}
      "Controllers":
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "collection", "uniquename": "'collection_' + collection_uri" }
      "View":
        - "fn": "with_URI"
          "params": "collection_uri "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
      "Aggregate": "managers"

  "roles":
      "Logger": ["module", "Roles"]
      "Models":
        "default":  {}
      "Controllers":
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "collection", "uniquename": "'collection_' + collection_uri" }
      "View":
        - "fn": "with_URI"
          "params": "collection_uri "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
      "Aggregate": "roles"

  "accountservice":
      "Logger": ["module", "AccountService"]
      "Models":
        "default":  {}
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/AccountService' "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
      "Aggregate": "accountservice"

  "accounts":
      "Logger": ["module", "Accounts"]
      "Models":
        "default":  {}
      "Controllers":
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "collection", "uniquename": "'collection_' + collection_uri" }
      "View":
        - "fn": "with_URI"
          "params": "collection_uri "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
      "Aggregate": "accounts"




awesome_mapper:
    collection:
      - { SelectEventType: "RedfishResource:created",
          Select: "type == 'RedfishResource:created' && nohash(data.ResourceURI) && baseuri(data.ResourceURI) == collection_uri ",
          ModelUpdate: [ {Property: "members", Query: "addtoset(model, propname, data.ResourceURI)", Default: 0} ]}
      - { SelectEventType: "RedfishResource:removed",
          Select: "type == 'RedfishResource:removed' && nohash(data.ResourceURI) && baseuri(data.ResourceURI) == collection_uri ",
          ModelUpdate: [ {Property: "members", Query: "removefromset(model, propname, data.ResourceURI)", Default: 0} ]}

    testview:
        - { Select: "type == 'AttributeUpdated' && data.FQDD == fqdd && data.Name == 'InstantaneousPower'", ModelUpdate: [ {Property: "Instantaneous_Power", Query: "data.Value", Default: 0} ] }

