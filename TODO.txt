Things that need work: (-) TODO (*) DONE

 - Systemd socket activation support
 - systemd service file
 - split the handlers for internal redfishresource aggregate commands and the "official" redfish handler

 - Dynamically generate metadata
    - Need to dynamically generate the odata metadata endpoints based on what objects are actually present in-tree
        - probably need to update createredfishresource to have a mandatory parameter specifying the schema

 - SSE support
    - Implement second EventBus just for SSE external traffic
    - Implement SAGA to bridge between the two busses

 - ACTIONS
    * Implement a test OEM action for reference
        * obmc now also implements reset action (test)
        * see scripts/test.sh, plugins/test_action/. These implement example action

 - EVENTS
    * implement an http endpoint to inject raw events into the system (internal command)

 - DBUS interface:
    - hook base command processor into dbus
    - need to hook current Tree into DBUS: allow sending the internal commands
    - hook up signals via plugins

 - GET aggregate plugin support:
    * Need to filter out @meta from Properties
    * Need to load plugins for each property
    * Example plugin for replacement of values on GET (Strategy 3 in plugins/test/readme.txt)
    * example plugin for processing event stream and replacing values (Strategy 1 in plugins/test/readme.txt)

 - implement for GET:
    - $skip
    - $top
    - $filter
    - $expand
    - Most of these can be implemented by recursively processing in GetCommand. Basically, do GET as normal, then when we get the http command results back, process it. skip/top operate on collections. $expand recursively walk and send new GET commands to incorporate into the output

 - PUT/PATCH/POST support
    * basic PATCH support controlled by @meta["PATCH"]["allowed"] = true
    - Add validation plugin support

 - ETAGS support. Proposal:
    - etags should be stored in the aggregate in the Headers map.
    - Updates to the aggregate trigger update of etags

 - SupportedMethods support: have a way to return allowed methods in the header.

 - Redfish compliant HTTP ERROR responses
    - some generic boilerplate to do this?
    - Need some generic domain redfish error helpers to handle generating JSON output and http error codes

 - DELETE
    * DELETE Implemented
    - can return GET representation of the deleted object (optional per spec, lets try to do it)
    - Need to return http 405 for undeletable, or when trying to delete a collection

 - CERTIFICATE support:
    * SSL support
    * Automatically generate CA and Server Cert
    * Add net.InterfaceAddrs() - list of all local IP addresses - to the SAN list
    - move certs to subdir
    - Get local hostname and add to SAN list
    - Some sort of notification to regenerate the local SSL certificate if interfaces change?

 - AccountService
    - Interesting case: PAM? getent passwd? Automatically create? How to get privileges? (PAM, too?)
    - Really ought to have strong support for oauth here. (so that redfish never needs to handle the actual password)

 - Chassis

 - Schema support: should aggregate load the metadata/json schema and automatically populate? Should it validate?

 - LINK Header

 - Common redfish resource properties
    - Do we need to do some special handling for the following properties, which are all specified as standard redfish resource properties?
        - Id
        - Name
        - Description
        - Status
        - Links
        - Members
        - RelatedItem
        - Actions
        - Oem

 - Generic TASK Service

