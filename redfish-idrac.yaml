main:
    server_name: "dell_idrac"
    #options: "openbmc" | "dell_ec" | "mockup"

listen:
    - http::8080
    - https::8443
    - pprof::9080

session:
    timeout: 600

views:
  "rootview":
      "Logger": ["module", "root"]
      "View":
        - "fn": "with_URI"
          "params": "'/redfish/v1'"
      "Aggregate": "root"

  "testview":
      "Logger": ["module", "testview"]
      "Models":
        "default":  {"unique_name": "'TEST_Unique_Name'", "name": "'TEST_Name'", "'description'": "'TEST_Description'" }
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/testview'"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
      "Aggregate": "registry_collection"

  "eventservice":
      "Logger": ["module", "eventservice"]
      "Models":
        "default": {
           "max_milliseconds_to_queue": "500",
           "max_events_to_queue": "20",
           "delivery_retry_attempts": "3",
           "delivery_retry_interval_seconds": "60",
           }
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/EventService'"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "etag"
          "params": ["max_milliseconds_to_queue", "max_events_to_queue", "delivery_retry_attempts", "delivery_retry_interval_seconds"]
        - "fn": "WithAction"
          "params": {"name": "submit.test.event", "uri": "/Actions/EventService.SubmitTestEvent", "actionFunction": "submittestevent"}
        - "fn": "linkModel"
          "params": {"existing": "default", "linkname": "etag"}
      "Aggregate": "eventservice"


  "sessionservice":
      "Logger": ["module", "session"]
      "Models":
        "default":  {"session_timeout": "30"}
      "Controllers":
        - "fn": "ARMapper"
          "params": {"modelname": "default", "cfgsection": "SessionService", "mappinguniquename": "'/redfish/v1/SessionService'", "AddToView": true}
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/SessionService'"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
      "Aggregate": "sessionservice"

  "sessioncollection":
      "Logger": ["module", "session"]
      "Models":
        "default":  {}
      "Controllers":
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "collection", "uniquename": "'collection_' + collection_uri" }
        - "fn": "ARMapper"
          "params": {"modelname": "default", "cfgsection": "SessionService", "mappinguniquename": "'/redfish/v1/SessionService/Sessions'", "AddToView": true}
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/SessionService/Sessions'"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
        - "fn": "withFormatter_count"
          "params":
      "Aggregate": "sessioncollection"

  "session":
      "Logger": ["module", "session"]
      "Models":
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/SessionService/Sessions/' + uuid"
      "Aggregate": "session"


  "registries":
      "Logger": ["module", "registry"]
      "Models":
        "default":  {}
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Registries'"

  "idrac_registry":
      "Logger": ["module", "registry"]
      "Models":
        "default":  {
          "id":          "'Messages'",
          "description": "'iDRAC Message Registry File locations'",
          "name":        "'iDRAC Message Registry File'",
          "type":        "'iDrac.1.5'",
          "languages":   "array('En')",
        }
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Registries/Messages'"
        - "fn": "withFormatter_count"
          "params":

  "base_registry":
      "Logger": ["module", "registry"]
      "Models":
        "default":  {
          "id":          "'BaseMessages'",
          "description": "'Base Message Registry File locations'",
          "name":        "'Base Message Registry File'",
          "type":        "'Base.1.3.8'",
          "languages":   "array('En')",
        }
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Registries/BaseMessages'"
        - "fn": "withFormatter_count"
          "params":

  "mgr_attr_registry":
      "Logger": ["module", "registry"]
      "Models":
        "default":  {
          "id":          "'ManagerAttributeRegistry'",
          "description": "'Manager Attribute Registry File Locations'",
          "name":        "'Manager Attribute Registry File'",
          "type":        "'ManagerAttributeRegistry.1.0'",
          "languages":   "array('En')",
        }
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Registries/ManagerAttributeRegistry'"
        - "fn": "withFormatter_count"
          "params":

  "sessioncollection":
      "Logger": ["module", "session"]
      "Models":
        "default":  {}
      "Controllers":
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "collection", "uniquename": "'collection_' + collection_uri" }
        - "fn": "ARMapper"
          "params": {"modelname": "default", "cfgsection": "SessionService", "mappinguniquename": "'/redfish/v1/SessionService/Sessions'", "AddToView": true}
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/SessionService/Sessions'"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
        - "fn": "withFormatter_count"
          "params":
      "Aggregate": "sessioncollection"

  "session":
      "Logger": ["module", "session"]
      "Models":
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/SessionService/Sessions/' + uuid"
      "Aggregate": "session"

  "chassis":
      "Logger": ["module", "Chassis"]
      "Models":
        "default":  {"members":"''"}
      "Controllers":
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "collection", "uniquename": "'collection_' + collection_uri" }
      "View":
        - "fn": "with_URI"
          "params": "collection_uri "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
        - "fn": "withFormatter_count"
          "params":
      "Aggregate": "chassis"

  "systems":
      "Logger": ["module", "Systems"]
      "Models":
        "default":  {"members":"''"}
      "Controllers":
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "collection", "uniquename": "'collection_' + collection_uri" }
      "View":
        - "fn": "with_URI"
          "params": "collection_uri "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
        - "fn": "withFormatter_count"
          "params":
      "Aggregate": "systems"

  "managers":
      "Logger": ["module", "Managers"]
      "Models":
        "default":  {"members":"''"}
      "Controllers":
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "collection", "uniquename": "'collection_' + collection_uri" }
      "View":
        - "fn": "with_URI"
          "params": "collection_uri "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
        - "fn": "withFormatter_count"
          "params":
      "Aggregate": "managers"

  "roles":
      "Logger": ["module", "Roles"]
      "Models":
        "default":  {"members":"''"}
      "Controllers":
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "collection", "uniquename": "'collection_' + collection_uri" }
      "View":
        - "fn": "with_URI"
          "params": "collection_uri "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
        - "fn": "withFormatter_count"
          "params":
      "Aggregate": "roles"

  "accountservice":
      "Logger": ["module", "AccountService"]
      "Models":
        "default":  {}
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/AccountService' "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
        - "fn": "withFormatter_count"
          "params":
      "Aggregate": "accountservice"

  "accounts":
      "Logger": ["module", "Accounts"]
      "Models":
        "default":  {"members":"''"}
      "Controllers":
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "collection", "uniquename": "'collection_' + collection_uri" }
      "View":
        - "fn": "with_URI"
          "params": "collection_uri "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_formatOdataList"
          "params":
        - "fn": "withFormatter_count"
          "params":
      "Aggregate": "accounts"


  "idrac_embedded":
      "Logger": ["module", "mgrChassis"]
      "Models":
        "default":  {"unique_name": "FQDD", "unique_name_attr": "FQDD+'.Attributes'", "attributes": "add_attribute_property()"}
      "Controllers":
        - "fn": "ARMapper"
          "params": {"modelname": "default", "cfgsection": "firmware/inventory", "mappinguniquename": "'fw_mapper:' + FQDD ", "AddToView": true}
        - "fn": "ARMapper"
          "params": {"modelname": "default", "cfgsection": "Managers/CMC.Integrated", "mappinguniquename": "'manager_mapper:' + FQDD ", "AddToView": true}
        - "fn": "AM2"
          "params": {"modelname": "default", "cfgsection": "health", "uniquename": "'am2_manager_' + FQDD" }
        - "fn": "ARDumper"
          "params": {"modelname": "default", "AddToView": true}
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Managers/' + FQDD"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_attributeFormatter"
          "params":
        - "fn": "withFormatter_expand"
          "params":
        - "fn": "withFormatter_count"
          "params":



  "system_chassis":
      "Logger": ["module", "system_chassis"]
      "Models":
        "default":  {"unique_name": "FQDD", "unique_name_attr": "FQDD+'.Attributes'", "attributes": "add_attribute_property()"}
      "Controllers":
        - "fn": "ARDumper"
          "params": {"modelname": "default", "AddToView": true}
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Chassis/' + FQDD "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_count"
          "params":
        - "fn": "withFormatter_attributeFormatter"
          "params":
        - "fn": "withFormatter_expand"
          "params":
        - "fn": "withFormatter_expandone"
          "params":
        - "fn": "withFormatter_formatOdataList"
          "params":
        - "fn": "with_PumpHandledAction"
          "params": {"name": "chassis.reset", "uri": "/Actions/Chassis.Reset", "timeout": 30}

  "storage_enclosure":
      "Logger": ["module", "StorageEnclosure"]
      "Models":
        "default":  {"unique_name": "FQDD", "unique_name_attr": "FQDD+'.Attributes'", "attributes": "add_attribute_property()"}
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Chassis/' + FQDD "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_count"
          "params":
        - "fn": "withFormatter_expand"
          "params":
        - "fn": "withFormatter_expandone"
          "params":
        - "fn": "withFormatter_formatOdataList"
          "params":

  "storage_controller":
      "Logger": ["module", "StorageController"]
      "Models":
        "default":  {"unique_name": "FQDD", "unique_name_attr": "FQDD+'.Attributes'", "attributes": "add_attribute_property()"}
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Systems/System.Embedded.1/StorageControllers/' + FQDD "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_count"
          "params":
        - "fn": "withFormatter_expand"
          "params":
        - "fn": "withFormatter_expandone"
          "params":
        - "fn": "withFormatter_formatOdataList"
          "params":

  "storage_drive":
      "Logger": ["module", "StorageDrive"]
      "Models":
        "default":  {"unique_name": "FQDD", "unique_name_attr": "FQDD+'.Attributes'", "attributes": "add_attribute_property()"}
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Systems/System.Embedded.1/Storage/Drives/' + FQDD "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_count"
          "params":
        - "fn": "withFormatter_expand"
          "params":
        - "fn": "withFormatter_expandone"
          "params":
        - "fn": "withFormatter_formatOdataList"
          "params":

  "storage_collection":
      "Logger": ["module", "StorageCollection"]
      "Models":
        "default":  {}
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Systems/System.Embedded.1/Storage/'"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_count"
          "params":
        - "fn": "withFormatter_expand"
          "params":
        - "fn": "withFormatter_expandone"
          "params":
        - "fn": "withFormatter_formatOdataList"
          "params":

  "storage_instance":
      "Logger": ["module", "StorageInstance"]
      "Models":
        "default":  {"unique_name": "FQDD", "unique_name_attr": "FQDD+'.Attributes'", "attributes": "add_attribute_property()"}
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Systems/System.Embedded.1/Storage/' + FQDD "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_count"
          "params":
        - "fn": "withFormatter_expand"
          "params":
        - "fn": "withFormatter_expandone"
          "params":
        - "fn": "withFormatter_formatOdataList"
          "params":

  "storage_volume":
      "Logger": ["module", "StorageVolume"]
      "Models":
        "default":  {"unique_name": "FQDD", "unique_name_attr": "FQDD+'.Attributes'", "attributes": "add_attribute_property()"}
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Systems/System.Embedded.1/Storage/Volumes/' + FQDD "
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_count"
          "params":
        - "fn": "withFormatter_expand"
          "params":
        - "fn": "withFormatter_expandone"
          "params":
        - "fn": "withFormatter_formatOdataList"
          "params":

  "storage_volume_collection":
      "Logger": ["module", "StorageVolumeCollection"]
      "Models":
        "default":  {"unique_name": "FQDD", "unique_name_attr": "FQDD+'.Attributes'", "attributes": "add_attribute_property()"}
      "Controllers":
      "View":
        - "fn": "with_URI"
          "params": "rooturi + '/Systems/System.Embedded.1/Storage/' + FQDD  +'/Volumes'"
        - "fn": "PublishResourceUpdatedEventsForModel"
          "params": "default"
        - "fn": "withFormatter_count"
          "params":
        - "fn": "withFormatter_expand"
          "params":
        - "fn": "withFormatter_expandone"
          "params":
        - "fn": "withFormatter_formatOdataList"
          "params":

awesome_mapper:
    collection:
      - { SelectEventType: "RedfishResource:created",
          Select: "type == 'RedfishResource:created' && nohash(data.ResourceURI) && baseuri(data.ResourceURI) == collection_uri ",
          ModelUpdate: [ {Property: "members", Query: "addtoset(model, propname, data.ResourceURI)", Default: 0} ]}
      - { SelectEventType: "RedfishResource:removed",
          Select: "type == 'RedfishResource:removed' && nohash(data.ResourceURI) && baseuri(data.ResourceURI) == collection_uri ",
          ModelUpdate: [ {Property: "members", Query: "removefromset(model, propname, data.ResourceURI)", Default: 0} ]}

    testview:
        - { Select: "type == 'AttributeUpdated' && data.FQDD == fqdd && data.Name == 'InstantaneousPower'", ModelUpdate: [ {Property: "Instantaneous_Power", Query: "data.Value", Default: 0} ] }


mappings:
    # EVERYTHING HERE is from the Config Attribute Registry. If you are not getting data from the Attribute Registry, it doesn't go here.

    test/testview:
        - {Property: "model",        FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Name" }

    Chassis/Enclosure:
        - {Property: "asset_tag",    FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "AssetTag" }
        - {Property: "chassis_type", FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "ChassisType" }
        - {Property: "description",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Description" }
        - {Property: "manufacturer", FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Manufacturer" }
        - {Property: "model",        FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Model" }
        - {Property: "name",         FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Name" }
        - {Property: "part_number",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "PartNumber" }
        - {Property: "power_state",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "PowerState" }
        - {Property: "sku",          FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "SKU" }
        - {Property: "serial",       FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "SerialNumber" }
        - {Property: "connector",    FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Connector" }
        - {Property: "service_tag",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "ServiceTag" }
        - {Property: "slot_count",   FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "SlotCount" }
        - {Property: "version",      FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Version" }
        - {Property: "wired_order",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "WiredOrder" }

    Storage/Instance:
        - {Property: "name",         FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Name" }
        - {Property: "firmware_version",    FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "FirmwareVersion" }
        - {Property: "manufacturer", FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Manufacturer" }
        - {Property: "member_id", FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "MemberId" }
        - {Property: "model",        FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Model" }
        - {Property: "speed",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "SpeedGbps" }

    Storage/Controller:
        - {Property: "name",         FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Name" }
        - {Property: "firmware_version",    FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "FirmwareVersion" }
        - {Property: "manufacturer", FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Manufacturer" }
        - {Property: "member_id", FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "MemberId" }
        - {Property: "model",        FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Model" }
        - {Property: "speed",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "SpeedGbps" }

    Storage/Drive:
        - {Property: "block_size",    FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "BlockSizeBytes" }
        - {Property: "capable_speed", FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "CapableSpeedGbs" }
        - {Property: "description",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Description" }
        - {Property: "capacity", FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "CapacityBytes" }
        - {Property: "encryption_ability",        FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "EncryptionAbility" }
        - {Property: "encryption_status",         FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "EncryptionStatus" }
        - {Property: "failure_predicted",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "FailurePredicted" }
        - {Property: "hotspare_type",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "HotspareType" }
        - {Property: "id",          FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Id" }
        - {Property: "manufacturer", FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Manufacturer" }
        - {Property: "media_type",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "MediaType" }
        - {Property: "model",        FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Model" }
        - {Property: "name",         FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Name" }
        - {Property: "negotiated_speed",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "NegotiatedSpeedGbs" }
        - {Property: "part_number",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "PartNumber" }
        - {Property: "predicted_media_life_left",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "PredictedMediaLifeLeftPercent" }
        - {Property: "protocol",       FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Protocol" }
        - {Property: "revision",       FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Revision" }
        - {Property: "rotation_speed",       FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "RotationSpeedRPM" }
        - {Property: "serial",       FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "SerialNumber" }

    Storage/Volume:
        - {Property: "block_size",    FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "BlockSizeBytes" }
        - {Property: "capacity", FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "CapacityBytes" }
        - {Property: "description",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Description" }
        - {Property: "encrypted", FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Encrypted" }
        - {Property: "id",        FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Id" }
        - {Property: "name",         FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Name" }
        - {Property: "optimum_io_size",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "OptimumIOSizeBytes" }
        - {Property: "volume_type",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "VolumeType" }

    Storage/Collection:
        - {Property: "description",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Description" }
        - {Property: "name",         FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Name" }

    Storage/VolumeCollection:
        - {Property: "description",  FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Description" }
        - {Property: "name",         FQDD: "{FQDD}", Group: "Info", Index: "1", Name: "Name" }
