{
    "$ref": "#/definitions/LogService",
    "$schema": "/redfish/v1/Schemas/redfish-schema.v1_1_0.json",
    "definitions": {
        "LogService": {
            "additionalProperties": false,
            "required": [
                "Id",
                "Name"
            ],
            "description": "This resource represents the log service for the resource or service to which it is associated.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            },
            "type": "object",
            "longDescription": "This resource shall be used to represent a log service for a Redfish implementation.",
            "properties": {
                "Status": {
                    "anyOf": [
                        {
                            "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Status"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "ServiceEnabled": {
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "description": "This indicates whether this service is enabled.",
                    "longDescription": "The value of this property shall be a boolean indicating whether this service is enabled."
                },
                "DateTimeLocalOffset": {
                    "pattern": "([-+][0-1][0-9]:[0-5][0-9])",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "The time offset from UTC that the DateTime property is set to in format: +06:00 .",
                    "longDescription": "The value is property shall represent the offset from UTC time that the current value of DataTime property contains."
                },
                "Name": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Name"
                },
                "@odata.type": {
                    "$ref": "/redfish/v1/Schemas/odata.4.0.0.json#/definitions/type"
                },
                "Description": {
                    "anyOf": [
                        {
                            "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "DateTime": {
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "The current DateTime (with offset) for the log service, used to set or read time.",
                    "longDescription": "The value of this property shall represent the current DateTime value that the log service is using, with offset from UTC, in Redfish Timestamp format.",
                    "format": "date-time"
                },
                "Actions": {
                    "additionalProperties": false,
                    "description": "The available actions for this resource.",
                    "patternProperties": {
                        "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                            "type": [
                                "array",
                                "boolean",
                                "number",
                                "null",
                                "object",
                                "string"
                            ],
                            "description": "This property shall specify a valid odata or Redfish property."
                        }
                    },
                    "type": "object",
                    "readonly": true,
                    "longDescription": "The Actions property shall contain the available actions for this resource.",
                    "properties": {
                        "#LogService.ClearLog": {
                            "$ref": "#/definitions/ClearLog"
                        },
                        "Oem": {
                            "additionalProperties": true,
                            "type": "object",
                            "patternProperties": {
                                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                                    "type": [
                                        "array",
                                        "boolean",
                                        "number",
                                        "null",
                                        "object",
                                        "string"
                                    ],
                                    "description": "This property shall specify a valid odata or Redfish property."
                                }
                            },
                            "properties": {}
                        }
                    }
                },
                "@odata.id": {
                    "$ref": "/redfish/v1/Schemas/odata.4.0.0.json#/definitions/id"
                },
                "Id": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Id"
                },
                "Entries": {
                    "$ref": "/redfish/v1/Schemas/LogEntryCollection.json#/definitions/LogEntryCollection",
                    "readonly": true,
                    "description": "References to the log entry collection.",
                    "longDescription": "The value of this property shall reference a collection of resources of type LogEntry."
                },
                "@odata.context": {
                    "$ref": "/redfish/v1/Schemas/odata.4.0.0.json#/definitions/context"
                },
                "Oem": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Oem",
                    "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.",
                    "longDescription": "The value of this string shall be of the format for the reserved word *Oem*."
                },
                "OverWritePolicy": {
                    "$ref": "#/definitions/OverWritePolicy",
                    "readonly": true,
                    "description": "The overwrite policy for this service that takes place when the log is full.",
                    "longDescription": "The value of this property shall indicate the policy of the log service when the MaxNumberOfRecords has been reached. Unknown indicates the log overwrite policy is unknown. WrapsWhenFull indicates that the log overwrites its entries with new entries when the log has reached its maximum capacity. NeverOverwrites indicates that the log never overwrites its entries by the new entries and ceases logging when the limit has been reached."
                },
                "MaxNumberOfRecords": {
                    "readonly": true,
                    "type": "number",
                    "minimum": 0,
                    "description": "The maximum number of log entries this service can have.",
                    "longDescription": "The value of this property shall be the maximum numbers of LogEntry resources in the Entries collection for this service."
                }
            }
        },
        "OverWritePolicy": {
            "enum": [
                "Unknown",
                "WrapsWhenFull",
                "NeverOverWrites"
            ],
            "type": "string",
            "enumDescriptions": {
                "NeverOverWrites": "When full, new entries to the Log will be discarded",
                "Unknown": "The overwrite policy is not known or is undefined",
                "WrapsWhenFull": "When full, new entries to the Log will overwrite previous entries"
            }
        },
        "ClearLog": {
            "additionalProperties": false,
            "type": "object",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            },
            "properties": {
                "target": {
                    "type": "string",
                    "description": "Link to invoke action",
                    "format": "uri"
                },
                "title": {
                    "type": "string",
                    "description": "Friendly action name"
                }
            }
        }
    },
    "title": "#LogService.v1_0_0.LogService",
    "copyright": "Copyright 2014-2016 Distributed Management Task Force, Inc. (DMTF). For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright",
    "@Redfish.Copyright": "Copyright 2017 Dell Inc. All rights reserved."
}