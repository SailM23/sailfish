{
    "definitions": {
        "JsonSchemaFile": {
            "type": "object",
            "required": [
                "Id",
                "Name",
                "Languages",
                "Schema",
                "Location"
            ],
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            },
            "properties": {
                "Name": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Name"
                },
                "Id": {
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Id"
                },
                "Oem": {
                    "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.",
                    "longDescription": "The value of this string shall be of the format for the reserved word *Oem*.",
                    "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Oem"
                },
                "Location": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Location"
                    },
                    "readonly": true,
                    "description": "Location information for this schema file."
                },
                "Schema": {
                    "readonly": true,
                    "longDescription": "The value of this property shall be the value of the @odata.type property for that schema and shall conform to the syntax specified in the Redfish specification for the Type property.",
                    "type": "string",
                    "description": "The @odata.type name this schema describes."
                },
                "@odata.context": {
                    "$ref": "/redfish/v1/Schemas/odata.4.0.0.json#/definitions/context"
                },
                "@odata.id": {
                    "$ref": "/redfish/v1/Schemas/odata.4.0.0.json#/definitions/id"
                },
                "Description": {
                    "anyOf": [
                        {
                            "$ref": "/redfish/v1/Schemas/Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ]
                },
                "@odata.type": {
                    "$ref": "/redfish/v1/Schemas/odata.4.0.0.json#/definitions/type"
                },
                "Languages": {
                    "readonly": true,
                    "items": {
                        "type": "string"
                    },
                    "longDescription": "The value of this property shall be a string consisting of an RFC 5646 language code.",
                    "type": "array",
                    "description": "Language codes for the schemas available."
                }
            },
            "description": "This is the schema definition for the Schema File locator resource.",
            "longDescription": "This resource shall be used to represent the Schema File locator resource for a Redfish implementation.",
            "additionalProperties": false
        },
        "Location": {
            "properties": {
                "PublicationUri": {
                    "readonly": true,
                    "type": "string",
                    "longDescription": "The value of this property shall be a URI not co-located with the Redfish service that specifies the canonical location of the schema file.  This property shall only be used for individual schema files.",
                    "format": "uri",
                    "description": "Link to publicly available (canonical) URI for schema."
                },
                "ArchiveFile": {
                    "readonly": true,
                    "longDescription": "The value of this property shall be the file name of the individual schema file within the archive file specified by the ArchiveUri property.  The file name shall conform to the format [SchemaType].[MajorVersion].[MinorVersion].json and be in conformance with the Redfish specification.",
                    "type": "string",
                    "description": "If the schema is hosted on the service in an archive file, this is the name of the file within the archive."
                },
                "Language": {
                    "readonly": true,
                    "longDescription": "The value of this property shall be a string consisting of an RFC5646 language code or the string 'default'.",
                    "type": "string",
                    "description": "The language code for the file the schema is in."
                },
                "Uri": {
                    "readonly": true,
                    "type": "string",
                    "longDescription": "The value of this property shall be a URI co-located with the Redfish service that specifies the location of the schema file.  This property shall only be used for individual schema files.  The file name portion of the URI shall conform to the format [SchemaType].[MajorVersion].[MinorVersion].json and be in conformance with the Redfish specification.",
                    "format": "uri",
                    "description": "Link to locally available URI for schema."
                },
                "ArchiveUri": {
                    "readonly": true,
                    "type": "string",
                    "longDescription": "The value of this property shall be a URI co-located with the Redfish service that specifies the location of the schema file.  This property shall only be used for archive files (zip or other formats).  The value of ArchiveFile shall have the file name of the individual schema file within the archive file.",
                    "format": "uri",
                    "description": "If the schema is hosted on the service in an archive file, this is the link to the archive file."
                }
            },
            "type": "object",
            "additionalProperties": false,
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            }
        }
    },
    "$schema": "/redfish/v1/Schemas/redfish-schema.v1_1_0.json",
    "title": "#JsonSchemaFile.v1_0_0.JsonSchemaFile",
    "@Redfish.Copyright": "Copyright 2017 Dell Inc. All rights reserved.",
    "copyright": "Copyright 2014-2016 Distributed Management Task Force, Inc. (DMTF). For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright",
    "$ref": "#/definitions/JsonSchemaFile"
}